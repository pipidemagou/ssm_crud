<?xml version="1.0" encoding="utf-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:aop="http://www.springframework.org/schema/aop"
  xmlns:tx="http://www.springframework.org/schema/tx"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        ">
  <!--  引入外部文件-->
  <context:property-placeholder location="classpath:db.properties"/>

  <!--  spring开启注解扫描-->
  <context:component-scan base-package="cn.itcast">
    <!--    不扫描controller-->
    <context:exclude-filter type="annotation"
      expression="org.springframework.stereotype.Controller"/>
  </context:component-scan>

  <bean class="com.mchange.v2.c3p0.ComboPooledDataSource" id="comboPooledDataSource">
    <property name="jdbcUrl" value="${jdbc.url}"/>
    <property name="driverClass" value="${jdbc.driver}"/>
    <property name="user" value="${jdbc.username}"/>
    <property name="password" value="${jdbc.password}"/>
  </bean>
  <!--  配置和mybatis的整合-->
  <bean class="org.mybatis.spring.SqlSessionFactoryBean" id="sqlSessionFactoryBean">
    <property name="configLocation" value="classpath:mybatis-config.xml"/>
    <property name="dataSource" ref="comboPooledDataSource"/>
    <property name="mapperLocations" value="classpath:mapper/*.xml"/>
  </bean>
  <!--  配置扫描器，将mybatis接口的实现加入到ioc容器-->
  <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer" id="mapperScannerConfigurer">
    <property name="basePackage" value="cn.itcast.dao"/>
  </bean>
  <!--  事务控制-->
  <bean class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
    id="dataSourceTransactionManager">
    <!--    控制数据源-->
    <property name="dataSource" ref="comboPooledDataSource"/>
  </bean>
  <!--  配置aop-->
  <aop:config>
    <aop:pointcut id="txPoint" expression="execution(* cn.itcast.service..*(..))"/>
    <aop:advisor advice-ref="transactionInterceptor" pointcut-ref="txPoint"/>
  </aop:config>
  <!--  配置事务管理-->
  <tx:advice id="transactionInterceptor" transaction-manager="dataSourceTransactionManager">
    <tx:attributes>
      <!--      所以方法都是事务方法-->
      <tx:method name="*" isolation="DEFAULT" propagation="REQUIRED"/>
      <!--      get开头的方法都是查询，只要只读-->
      <tx:method name="get*" read-only="true"/>
    </tx:attributes>
  </tx:advice>
  <!--  配置一个可以批量的sqlSession-->
  <bean id="sessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
    <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactoryBean"/>
    <constructor-arg name="executorType" value="BATCH"/>
  </bean>
</beans>